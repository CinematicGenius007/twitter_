<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= user.name %></title>

    <link rel="stylesheet" href="https://kit-pro.fontawesome.com/releases/v5.15.4/css/pro.min.css">

    <style>
        body {
            margin: 0;
            box-sizing: border-box;
            min-height: 100vh;
            display: flex;
            justify-content: center;
        }

        #side-panel {
            width: 20rem;
            background-color: #eee;
            position: relative;
            top: 0;
        }

        #side-panel > h1 {
            font-size: 4rem;
            margin: 1rem 0;
            padding: 1rem;
            text-align: center;
        }

        .blink {
            animation: blink 1s linear infinite;
        }

        @keyframes blink {
            50% {
                opacity: 0;
            }
        }

        a[href="/profile"] {
            text-decoration: none;
            color: black;
        }

        #home-links {
            display: flex;
            gap: 1rem;
            padding: 1rem;
            text-decoration: none;
        }
        
        #home-links > a {
            text-decoration: none;
            color: #000;
            padding: 0.4rem 1rem;
            border-radius: 0.25rem;
            background-color: #bbbbbb;
            transition: background-color 0.2s ease-in-out;
        }

        #home-links > a:hover {
            background-color: #aaaaaa;
        }

        #user-page {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            gap: 1rem;
            padding: 0 1rem;
            text-decoration: none;
            color: black;
            position: sticky;
            top: 2rem;
        }

        #user-meta {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 0.5rem;
        }

        /* making the profile pic circular without affecting it's aspect ratio and shape of the image */
        #profile-pic {
            width: 10rem;
            height: 10rem;
            object-fit: cover;
            border-radius: 50%;
        }

        #user-name {
            font-size: 2rem;
            font-weight: 400;
            margin: 2rem 0 0.5rem 0;
        }

        #user-handle {
            font-size: 1.25rem;
            font-weight: 400;
            font-style: italic;
            margin: 0;
        }


        /* Main content */

        #main-content {
            flex: 1;
            box-sizing: border-box;
            max-width: 38rem;
            padding: 0 1rem;
        }

        #backToHome {
            display: inline-flex;
            align-items: center;
            gap: 2rem;
            text-decoration: none;
            margin: 1rem 1rem 0;
            padding: 0.4rem 1.1rem;
            color: black;
            font-size: 1.1rem;
            transition: color 0.2s ease-in-out;
        }

        #backToHome:hover {
            color: #555;
        }

        #tweet-list {
            padding: 1rem;
            box-sizing: border-box;
        }

        .individual-tweet {
            display: flex;
            flex-direction: column;
            gap: 1rem;
            text-decoration: none;
            color: black;
            background-color: #efefef;
            padding: 1rem 1.5rem;
            border-radius: 0.4rem;
            margin-bottom: 2.5rem;
            transition: background-color 0.2s ease-in-out;
        }

        .individual-tweet:hover {
            background-color: #e0e0e0;
        }

        .tweet-meta {
            display: flex;
            gap: 1rem;
            align-items: self-start;
        }

        .tweet-meta > img {
            width: 2.5rem;
            height: 2.5rem;
            object-fit: cover;
            border-radius: 50%;
        }

        .tweet-owner {
            display: flex;
            flex-direction: column;
        }

        .tweet-owner > h4 {
            font-size: 1rem;
            font-weight: 400;
            margin: 0;
        }

        .tweet-owner > h6 {
            font-size: 0.75rem;
            font-weight: 400;
            font-style: italic;
            margin: 0;
        }

        .dot-separator {
            font-size: 1rem;
            font-weight: 400;
            margin: 0;
        }

        .tweet-meta .timestamp {
            margin: 0;
        }

        .individual-tweet > p {
            font-size: 1.25rem;
            font-weight: 400;
            margin: 0.25rem 3.5rem 0;
            word-wrap: break-word;
            white-space: pre-wrap;
        }

        .tweet-media {
            margin: 0.25rem 3.5rem 0;
            border-radius: 0.5rem;
        }

        .tweet-likes-container {
            display: flex;
            gap: 1rem;
            align-items: center;
            margin: 0.25rem 3.5rem 0;
            position: relative;
        }

        .tweet-like-button {
            font-size: 1rem;
            font-weight: 400;
            border: none;
            outline: none;
            color: black;
            background-color: transparent;
            cursor: pointer;
            transition: color 0.2s ease-in-out;
            display: flex;
            gap: 1rem;
            align-items: center;
            padding: 0.2rem;
        }

        .tweet-like-button:hover {
            color: #3e3e3e;
        }

        /* making the like button red when it is liked */
        .tweet-like-button.liked {
            color: #e02424;
        }

        .tweet-like-button.liked:hover {
            color: #c01414;
        }

        .tweet-likes-count {
            font-size: 0.75rem;
            font-weight: 400;
            margin: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
    </style>
</head>
<body>
    <div id="side-panel">
        <h1>twitter<span class="blink">_</span></h1>
        <div id="user-page">    
            <a href="/profile">
                <div id="user-meta">
                    <img id="profile-pic" src="/images/<%= user.profile %>" alt="profile-pic" />
                    <div>
                        <h3 id="user-name"><%= user.name %></h3>
                        <h5 id="user-handle"><%= user.handle %></h5>
                    </div>
                </div>
            </a>
            <div id="home-links">
                <!-- <a id="Home" href="/home">Home</a> -->
                <a id="logout-button" href="/logout">Logout</a>
            </div>
        </div>
    </div>

    <div id="main-content">
        <a id="backToHome" href="/home"><i class="fas fa-long-arrow-left"></i><span>Home</span></a>
        <div id="tweet-list">
            <% tweets.forEach(tweet => { %>
                <!-- <div> -->
                    <!--  It's structure is like first div contains user profile (if not default), their name, their handle and the time and in the next line the tweet itself and at the end the like button and this whole thing is wrapped inside an anchor tag -->

                    <a class="individual-tweet" href="/tweet/<%= tweet.id %>" data-index="<%= tweet.id %>">
                        <div class="tweet-meta">
                            <% if (typeof tweet.profile !== 'undefined' && tweet.profile) { %>
                                <img src="/images/<%= tweet.profile %>" alt="profile-pic">
                            <% } %>
                            <div class="tweet-owner" data-link="<%= tweet.user %>">
                                <h4><%= tweet.name %></h3>
                                <h6><%= tweet.handle %></h5>
                            </div>

                            <!-- a dot style separator -->

                            <div class="dot-separator">&middot;</div>

                            <h5 class="timestamp"><%= tweet.timestamp %></h5>
                        </div>
                        <p><%= tweet.tweet %></p>

                        <% if (typeof tweet.media !== 'undefined' && tweet.media) { %>
                            <img class="tweet-media" src="/images/<%= tweet.media %>" />
                        <% } %>

                        <div class="tweet-likes-container">
                            <button class="tweet-like-button<% if (tweet.is_liked) { %> liked<% } %>">
                                <i class="fas fa-thumbs-up"></i>
                                <span class="tweet-likes-count"><%= tweet.likes %></span>
                            </button>
                        </div>
                    </a>
                <!-- </div> -->
            <% }) %>
        </div>
    </div>

    <script>
        // const tweetMedia = document.querySelector('input[type="file"]');

        // tweetMedia.addEventListener('change', (event) => {
        //     const file = event.target.files[0];

        //     if (file) {
        //         const reader = new FileReader();

        //         reader.addEventListener('load', (event) => {
        //             document.querySelector('img#tweet-media-handler').style.display = 'block';
        //             document.querySelector('img#tweet-media-handler').src = event.target.result;
        //         });

        //         reader.readAsDataURL(file);
        //     }
        // });

        /*editable.addEventListener('focus', () => {
            if (editable.classList.contains('placeholder')) {
                editable.textContent = '';
                editable.classList.remove('placeholder');
            }
        });*/


        const likeButtons = document.querySelectorAll('.tweet-like-button');
        likeButtons.forEach(button => {
            button.addEventListener('click', (event) => {
                // not firing the click event on the parent anchor tag
                // event.stopPropagation();
                event.preventDefault();
                
                button.classList.toggle('liked');

                // getting the tweet id from the parent anchor tag and then sending an authenticated request to the server to update the likes count
                const tweetId = button.parentElement.parentElement.getAttribute('data-index');

                fetch(`/like/${tweetId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        liked: button.classList.contains('liked')
                    })
                })
                    .then(response => response.json())
                    .then(data => {
                        // updating the likes count
                        button.querySelector('.tweet-likes-count').textContent = data.likes;
                    })
                    .catch(error => {
                        console.log(error);
                    });
            });
        });


        const tweetOwners = document.querySelectorAll('.tweet-owner');

        tweetOwners.forEach(owner => {
            owner.addEventListener('click', (event) => {
                event.preventDefault();
                const link = owner.getAttribute('data-link');
                window.location.href = `/user/${link}`;
            });
        });
    </script>
</body>
</html>