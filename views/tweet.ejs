<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tweet</title>

    <link rel="stylesheet" href="https://kit-pro.fontawesome.com/releases/v5.15.4/css/pro.min.css">

    <style>
        body {
            margin: 0;
            box-sizing: border-box;
            min-height: 100vh;
            display: flex;
            justify-content: center;
        }

        #side-panel {
            width: 20rem;
            background-color: #eee;
            position: relative;
            top: 0;
        }

        #side-panel > h1 {
            font-size: 4rem;
            margin: 1rem 0;
            padding: 1rem;
            text-align: center;
        }

        .blink {
            animation: blink 1s linear infinite;
        }

        @keyframes blink {
            50% {
                opacity: 0;
            }
        }

        a[href="/profile"] {
            text-decoration: none;
            color: black;
        }

        #user-page {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            gap: 1rem;
            padding: 0 1rem;
            text-decoration: none;
            color: black;
            position: sticky;
            top: 2rem;
        }

        #user-meta {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 0.5rem;
        }

        /* making the profile pic circular without affecting it's aspect ratio and shape of the image */
        #profile-pic {
            width: 10rem;
            height: 10rem;
            object-fit: cover;
            border-radius: 50%;
        }

        #user-name {
            font-size: 2rem;
            font-weight: 400;
            margin: 2rem 0 0.5rem 0;
        }

        #user-handle {
            font-size: 1.25rem;
            font-weight: 400;
            font-style: italic;
            margin: 0;
        }

        #home-links {
            display: flex;
            gap: 1rem;
            padding: 1rem;
            text-decoration: none;
        }

        #home-links > a {
            text-decoration: none;
            color: #000;
            padding: 0.4rem 1rem;
            border-radius: 0.25rem;
            background-color: #bbbbbb;
            transition: background-color 0.2s ease-in-out;
        }

        #home-links > a:hover {
            background-color: #aaaaaa;
        }


        /* Main content */

        #main-content {
            flex: 1;
            box-sizing: border-box;
            max-width: 38rem;
            padding: 1rem;
        }

        #backToHome {
            display: inline-flex;
            align-items: center;
            gap: 2rem;
            text-decoration: none;
            margin: 0 1rem;
            padding: 0.4rem 1.1rem;
            color: black;
            font-size: 1.1rem;
            transition: color 0.2s ease-in-out;
        }

        #backToHome:hover {
            color: #555;
        }

        #the-tweet {
            display: flex;
            flex-direction: column;
            gap: 1rem;
            padding: 1rem;
            margin: 1rem 0;
        }

        #tweet-meta {
            display: flex;
            gap: 1rem;
        }

        #tweet-user-profile {
            width: 3.5rem;
            height: 3.5rem;
            object-fit: cover;
            border-radius: 50%;
        }

        #tweet-user-meta {
            text-decoration: none;
            color: black;
        }

        #tweet-user-name {
            font-size: 1.5rem;
            font-weight: 400;
            margin: 0;
        }

        #tweet-user-handle {
            font-size: 1rem;
            font-weight: 400;
            font-style: italic;
            margin: 0;
        }

        /* Owner Controls */
        #owner-controls {
            flex: 1;
            display: flex;
            justify-content: flex-end;
            align-items: self-start;
            gap: 1rem;
        }

        #owner-controls > a {
            text-decoration: none;
            font-size: 0.9rem;
            padding: 0.3rem;
            transition: color 0.2s ease-in-out;
        }

        #owner-controls > a:not(.delete) {
            color: #000;
        }

        a.delete {
            color: #e02424;
        }

        #owner-controls > a:hover {
            color: #3e3e3e;
        }

        a.delete:hover {
            color: #c01414;
        }

        #tweet-content {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        #tweet-content > p {
            font-size: 1.25rem;
            font-weight: 400;
            margin: 0;
            word-wrap: break-word;
            white-space: pre-wrap;
        }

        #tweet-info-controls {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin: 1rem 0;
        }

        .dot-separator {
            font-size: 1rem;
            font-weight: 400;
            margin: 0;
        }

        #tweet-like-button {
            display: flex;
            align-items: center;
            gap: 1rem;
            font-weight: 400;
            color: #000;
            transition: color 0.2s ease-in-out;
            border: none;
            outline: none;
            background-color: transparent;
            cursor: pointer;
        }

        #tweet-like-button:hover {
            color: #3e3e3e;
        }

        /* making the like button red when it is liked */
        #tweet-like-button.liked {
            color: #e02424;
        }

        #tweet-like-button.liked:hover {
            color: #c01414;
        }

        #tweet-likes-count {
            font-size: 0.75rem;
            font-weight: 400;
            margin: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        #new-reply-container {
            display: flex;
            gap: 1rem;
            padding: 1rem;
            margin: 1rem 0;
        }

        #tweet-media {
            width: 100%;
            border-radius: 0.5rem;
        }

        #new-reply-profile {
            width: 3rem;
            height: 3rem;
            object-fit: cover;
            border-radius: 50%;
        }

        #new-reply-container > form {
            flex: 1;
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .editable {
            width: 100%;
            max-width: 30rem;
            min-height: 1rem;
            margin: 0;
            padding: 0.5rem 1rem;
            font-size: 1rem;
            line-height: 1.5rem;
            border: none;
            outline: none;
            overflow: hidden;
            -webkit-user-modify: read-write-plaintext-only;
            resize: none;
            background-color: #eee;
            /* font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; */
            border-radius: 0.25rem;
            white-space: pre-wrap;
            box-sizing: border-box;
        }

        div[contenteditable]:empty:before {
            content: attr(data-placeholder);
            color: #ccc;
        }

        div[contenteditable]:focus:before {
            display: none;
        }

        #reply-info-controls {
            display: flex;
            justify-content: space-between;
            align-items: center;
            gap: 1rem;
        }

        #new-reply-button {
            color: #000;
            width: 5rem;
            font-size: 1rem;
            padding: 0.4rem 1rem;
            border-radius: 0.25rem;
            background-color: #bbbbbb;
            transition: background-color 0.2s ease-in-out;
            border: 0;
            cursor: pointer;
            font-family: inherit;
        }

        #new-reply-button:hover {
            background-color: #aaaaaa;
        }

        #reply-list {
            padding: 1rem;
            box-sizing: border-box;
        }

        .reply-container {
            display: flex;
            flex-direction: column;
            gap: 1rem;
            text-decoration: none;
            color: black;
            background-color: #efefef;
            padding: 1rem 1.5rem;
            border-radius: 0.4rem;
            margin-bottom: 2.5rem;
        }

        .reply-meta {
            display: flex;
            gap: 1rem;
            align-items: self-start;
        }

        .reply-meta > img {
            width: 2.5rem;
            height: 2.5rem;
            object-fit: cover;
            border-radius: 50%;
        }

        .reply-owner {
            display: flex;
            flex-direction: column;
            text-decoration: none;
            color: black;
        }

        .reply-owner > h4 {
            font-size: 1rem;
            font-weight: 400;
            margin: 0;
        }

        .reply-owner > h6 {
            font-size: 0.75rem;
            font-weight: 400;
            font-style: italic;
            margin: 0;
        }

        .dot-separator {
            font-size: 1rem;
            font-weight: 400;
            margin: 0;
        }

        .reply-meta .timestamp {
            margin: 0;
        }

        .reply-container > p {
            font-size: 1.25rem;
            font-weight: 400;
            margin: 0.25rem 3.5rem 0.5rem;
        }

        .reply-owner-controls {
            flex: 1;
            display: flex;
            justify-content: flex-end;
            align-items: center;
        }

        .reply-owner-controls > a {
            text-decoration: none;
            font-size: 0.9rem;
        }
    </style>
</head>
<body>
    <div id="side-panel">
        <h1>twitter<span class="blink">_</span></h1>
        <div id="user-page">    
            <a href="/profile">
                <div id="user-meta">
                    <img id="profile-pic" src="/images/<%= user.profile %>" alt="profile-pic" />
                    <div>
                        <h3 id="user-name"><%= user.name %></h3>
                        <h5 id="user-handle"><%= user.handle %></h5>
                    </div>
                </div>
            </a>
            <div id="home-links">
                <a id="profile-page" href="/user/<%= user.id %>">Profile</a>
                <a id="logout-button" href="/logout">Logout</a>
            </div>
        </div>
    </div>

    <div id="main-content">
        <a id="backToHome" href="/home"><i class="fas fa-long-arrow-left"></i><span>Home</span></a>

        <div id="the-tweet">
            <div id="tweet-meta">
                <img id="tweet-user-profile" src="/images/<%= tweet.profile %>" alt="profile-pic" />
                <a id="tweet-user-meta" href="/user/<%= tweet.user %>">
                    <h3 id="tweet-user-name"><%= tweet.name %></h3>
                    <h5 id="tweet-user-handle"><%= tweet.handle %></h5>
                </a>
                <% if (tweet.user === user.id) { %>
                    <div id="owner-controls">
                        <a href="/editTweet/<%= tweet.id %>"><i class="fas fa-edit"></i></a>
                        <a class="delete" href="/tweet/truncate/<%= tweet.id %>"><i class="fas fa-trash"></i></a>
                    </div>
                <% } %>
            </div>
            <div id="tweet-content">
                <p><%= tweet.tweet %></p>
            </div>
            <% if (tweet.media) { %>
                <img id="tweet-media" src="/images/<%= tweet.media %>" />
            <% } %>
            <div id="tweet-info-controls">
                <div id="tweet-timestamp"><%= tweet.timestamp %></div>
                <div class="dot-separator">&middot;</div>
                <button id="tweet-like-button" class="<% if (tweet.is_liked) { %>liked<% } %>" data-tweet-id="<%= tweet.id %>">
                    <span id="tweet-likes-count"><%= tweet.likes %> <% if (tweet.likes > 1) { %>
                        Likes
                    <% } else { %>
                        Like
                    <% } %></span>
                    <i class="fas fa-thumbs-up"></i>
                </button>
            </div>
        </div>

        <hr />

        <div id="new-reply-container">
            <img id="new-reply-profile" src="/images/<%= user.profile %>" alt="profile-pic" />
            <form method="POST" action="/createReply/<%= tweet.id %>">
                <!-- <label for="tweet"></label> -->
                <!-- <textarea name="tweet" id="tweet" cols="25" rows="4" placeholder="What's happening?" maxlength="200"></textarea> -->
                <div class="editable" contenteditable="true" data-placeholder="Any thoughts?" maxLength="200" ></div>
                <input type="hidden" name="reply" id="reply" maxlength="200">
                <div id="reply-info-controls">
                    <button id="new-reply-button" type="submit">Reply</button>
                    <div id="reply-length-container"><span id="reply-length-value">0</span> / 200</div>
                </div>
            </form>
        </div>

        <div id="reply-list">
            <% replies.forEach(reply => { %>
                <div class="reply-container">
                    <div class="reply-meta">
                        <% if (typeof reply.profile !== 'undefined' && reply.profile) { %>
                            <img src="/images/<%= reply.profile %>" alt="profile-pic">
                        <% } %>
                        <a class="reply-owner" href="/user/<%= reply.user %>">
                            <h4><%= reply.name %></h3>
                            <h6><%= reply.handle %></h5>
                        </a>

                        <!-- a dot style separator -->

                        <div class="dot-separator">&middot;</div>

                        <h5 class="timestamp"><%= reply.timestamp %></h5>

                        <% if (reply.user === user.id) { %>
                            <div class="reply-owner-controls">
                                <a class="delete" href="/reply/truncate/<%= tweet.id %>/<%= reply.id %>"><i class="fas fa-trash"></i></a>
                            </div>
                        <% } %>
                    </div>
                    <p><%= reply.reply %></p>
                    <!-- <div class="tweet-likes-container">
                        <button class="tweet-like-button< if (tweet.is_liked) { > liked< } >">
                            <i class="fas fa-thumbs-up"></i>
                            <span class="tweet-likes-count">< tweet.likes ></span>
                        </button>
                    </div> -->
                </div>
            <% }) %>
        </div>
        
    </div>

    <script>
        const likeButton = document.querySelector('#tweet-like-button');

        likeButton.addEventListener('click', (event) => {
            // not firing the click event on the parent anchor tag
            // event.stopPropagation();
            event.preventDefault();
            
            likeButton.classList.toggle('liked');

            // getting the tweet id from the parent anchor tag and then sending an authenticated request to the server to update the likes count
            const tweetId = likeButton.getAttribute('data-tweet-id');

            fetch(`/like/${tweetId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    liked: likeButton.classList.contains('liked')
                })
            })
                .then(response => response.json())
                .then(data => {
                    // updating the likes count
                    likeButton.querySelector('#tweet-likes-count').textContent = `${data.likes} ${data.likes > 1 ? 'Likes' : 'Like'}`;
                })
                .catch(error => {
                    console.log(error);
                });
        });

        const editable = document.querySelector('.editable');

        editable.addEventListener('input', () => {
            // if (editable.textContent.trim() === '') {
            //     editable.classList.add('placeholder');
            //     editable.textContent = 'What\'s happening?';
            // } else {
                // editable.classList.remove('placeholder');

            // limiting the value of the editable div to 200 characters

            // getting the max length of the editable div
            const maxLength = editable.getAttribute('maxLength');

            // getting the current length of the editable div
            const currentLength = editable.textContent.length;

            let currentContent = editable.textContent;

            const replyLengthValue = document.querySelector('#reply-length-value');
            replyLengthValue.textContent = currentLength;

            // if the current length is greater than the max length then removing the extra characters

            if (currentLength > maxLength) {
                replyLengthValue.style.color = 'red';
                currentContent = editable.textContent.slice(0, maxLength);
            } else {
                replyLengthValue.style.color = 'black';
            }

            // getting the hidden input field and setting it's value to the content of the editable div
            const hiddenInput = document.querySelector('#reply');
            hiddenInput.value = currentContent;
            // }
        });
    </script>    
</body>
</html>